name: cli-release-build-native-linux

on:
  workflow_dispatch: {}
  release:
    types: [released]

jobs:
  build:
    if: github.repository_owner == 'Apicurio'
    runs-on: ubuntu-latest
    steps:
    - name: Fetch required Details
      run: |
          touch latestRelease.json && curl https://api.github.com/repos/apicurio/apicurio-registry/releases/latest > latestRelease.json
          echo "RELEASE_VERSION=$(cat latestRelease.json | jq -r '.name')" >> $GITHUB_ENV
          echo "SOURCE_CODE_URL=$(cat latestRelease.json | jq -r '.zipball_url')" >> $GITHUB_ENV
          echo "UPLOAD_URL=$(cat latestRelease.json | jq -r '.upload_url')" >> $GITHUB_ENV
    
    - name: Echo Environment Variables
      run: |
        echo "$RELEASE_VERSION"
        echo "$SOURCE_CODE_URL"
        echo "$UPLOAD_URL"

    - name: Download Source Code
      run: wget -c $SOURCE_CODE_URL && unzip $RELEASE_VERSION && ls -lrt && mv ${{github.repository_owner}}* registry
        
    - name: Verify Project Version
      run: |
        cd registry
        PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        if [[ $PROJECT_VERSION != $RELEASE_VERSION ]]
        then
            echo "ERROR: Project Version '${PROJECT_VERSION}' does not match with Released Version '${RELEASE_VERSION}'"
            exit 1	  
        fi
        
    - name: Install graalvm
      uses: DeLaGuardo/setup-graalvm@4.0
      with:
        # GraalVM version, no pattern syntax available atm
        graalvm: '21.0.0.2'
        # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
        java: 'java11'
        # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
        arch: 'amd64'

    - name: Install native-image
      run: gu install native-image

    - name: Get maven wrapper
      run: cd registry && mvn -N io.takari:maven:wrapper -Dmaven=3.6.3

    - name: Build jvm jar
      run: cd registry && ./mvnw -pl cli -am install
      
    - name: View Files
      run: ls -lrt registry/cli/target/

    - name: Upload jvm jar
      id: upload-jar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./registry/cli/target/apicurio-registry-cli-${{ env.RELEASE_VERSION }}-runner.jar
        asset_name: apicurio-registry-cli-${{ env.RELEASE_VERSION }}.jar
        asset_content_type: application/octet-stream

    - name: Build native executable
      run: cd registry && ./mvnw -pl cli package -Dnative
    
    - name: View Files
      run: ls -lrt registry/cli/target/
      
    - name: Upload native executable
      id: upload-native-executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./registry/cli/target/apicurio-registry-cli-${{ env.RELEASE_VERSION }}-runner
        asset_name: apicurio-registry-cli-${{ env.RELEASE_VERSION }}-linux
        asset_content_type: application/octet-stream

    - name: Google Chat Notification
        if: ${{ failure() }}
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}