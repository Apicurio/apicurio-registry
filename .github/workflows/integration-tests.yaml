name: Integration Tests Workflow
on:
  push:
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'docs/**'
      - '.github/workflows/**'
    branches: [ main ]
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'docs/**'
    branches: [ main ]

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare-integration-tests:
    name: Prepare for Integration Tests
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'Apicurio' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    steps:
      - name: Show Actor
        run: echo ${{github.actor}}
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Open-Source Machine emulator that allows you to emulate multiple CPU architectures on your machine
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Docker CLI plugin for extended build capabilities with BuildKit
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Get maven wrapper
        run: mvn -N io.takari:maven:wrapper -Dmaven=3.8.2

      - name: Build Application
        run: ./mvnw clean package -pl app,distro/docker -am --no-transfer-progress -Pprod -DskipTests=true -Dmaven.javadoc.skip=true -Dmaven.wagon.httpconnectionManager.maxTotal=30 -Dmaven.wagon.http.retryHandler.count=5

      - name: Build and Push Application image
        run: |
          docker buildx build --push -f ./distro/docker/target/docker/Dockerfile.jvm -t ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d --platform linux/amd64,linux/arm64,linux/s390x,linux/ppc64le ./distro/docker/target/docker
  

  integration-tests-kafkasql:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql1:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql2:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql3:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql4:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql5:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql6:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql7:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql8:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql9:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql10:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql11:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql12:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql13:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql14:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql15:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql16:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql17:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql18:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql19:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql20:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql21:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql22:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql23:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql24:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql25:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql26:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql27:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql28:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql29:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql30:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql31:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql32:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql33:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql34:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql35:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql36:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql37:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts

  integration-tests-kafkasql38:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts


  integration-tests-kafkasql39:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts



  integration-tests-kafkasql40:
    name: Integration Tests KafkaSql
    runs-on: ubuntu-20.04
    needs: prepare-integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.31.1'
          kubernetes version: 'v1.26.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker

      - name: Prepare minikube tunnel
        run: minikube tunnel &> /dev/null &

      - name: Run Integration Tests - Kafkasql
        run: ./mvnw verify -am --no-transfer-progress -Pintegration-tests -Pci -Dregistry-kafkasql-image=ttl.sh/${{ github.sha }}/apicurio/apicurio-registry:1d  -Premote-kafka -pl integration-tests -Dmaven.javadoc.skip=true

      - name: Collect logs
        if: failure()
        run: sh ./.github/scripts/collect_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v4.0.0
        with:
          name: tests-logs-kafkasql
          path: artifacts