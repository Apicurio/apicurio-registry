name: Verify Build Workflow
on:
  push:
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'docs/**'
      - '.github/workflows/**'
    branches: [ main, '[1-9].[0-9].x' ]
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'docs/**'
    branches: [ main, '[1-9].[0-9].x' ]

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TESTCONTAINERS_RYUK_DISABLED: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'Apicurio' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    steps:
      - name: Checkout Code with Ref '${{ github.ref }}'
        uses: actions/checkout@v3

      - name: Install tools
        run: .github/scripts/install-tools.sh

      - name: Run linter
        run: ./scripts/validate-files.sh

  build-verify:
    name: Verify In Memory Build
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'Apicurio' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    steps:
      - name: Checkout Code with Ref '${{ github.ref }}'
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      # Open-Source Machine emulator that allows you to emulate multiple CPU architectures on your machine
      - name: Set up QEMU
        if: github.event_name == 'push'
        uses: docker/setup-qemu-action@v1

      # Docker CLI plugin for extended build capabilities with BuildKit
      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        if: github.event_name == 'push'
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to DockerHub Registry
        if: github.event_name == 'push'
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Login to Quay.io Registry
        if: github.event_name == 'push'
        run: docker login -u "${{ secrets.QUAY_USERNAME }}" -p "${{ secrets.QUAY_PASSWORD }}" quay.io

      - name: Create Image and publish it to Quay.io
        run: mvn package -am -pl app -DskipUiBuild -Dregistry.build.mem-image=${{ github.event_name == 'push' }}

      - name: Create Image and publish it to Docker.io
        run: mvn package -am -pl app -DskipUiBuild -Dregistry.build.mem-image=${{ github.event_name == 'push' }} -Dquarkus.container-image.registry=docker.io -DskipTests

  build-verify-sql:
    name: Verify SQL Build
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'Apicurio' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    steps:
      - name: Checkout Code with Ref '${{ github.ref }}'
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      # Open-Source Machine emulator that allows you to emulate multiple CPU architectures on your machine
      - name: Set up QEMU
        if: github.event_name == 'push'
        uses: docker/setup-qemu-action@v1

      # Docker CLI plugin for extended build capabilities with BuildKit
      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        if: github.event_name == 'push'
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to DockerHub Registry
        if: github.event_name == 'push'
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Login to Quay.io Registry
        if: github.event_name == 'push'
        run: docker login -u "${{ secrets.QUAY_USERNAME }}" -p "${{ secrets.QUAY_PASSWORD }}" quay.io

      - name: Create Image and publish it to Quay.io
        run: mvn package -am -Psql -pl storage/sql -DskipUiBuild -DskipAppTests -Dregistry.build.sql-image=${{ github.event_name == 'push' }}

      - name: Create Image and publish it to Docker.io
        run: mvn package -am -Psql -pl storage/sql -DskipUiBuild -DskipTests -Dregistry.build.sql-image=${{ github.event_name == 'push' }} -Dquarkus.container-image.registry=docker.io


  build-verify-kafkasql:
    name: Verify KafkaSql Build
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'Apicurio' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    steps:
      - name: Checkout Code with Ref '${{ github.ref }}'
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      # Open-Source Machine emulator that allows you to emulate multiple CPU architectures on your machine
      - name: Set up QEMU
        if: github.event_name == 'push'
        uses: docker/setup-qemu-action@v1

      # Docker CLI plugin for extended build capabilities with BuildKit
      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        if: github.event_name == 'push'
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to DockerHub Registry
        if: github.event_name == 'push'
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Login to Quay.io Registry
        if: github.event_name == 'push'
        run: docker login -u "${{ secrets.QUAY_USERNAME }}" -p "${{ secrets.QUAY_PASSWORD }}" quay.io

      - name: Create Image and publish it to Quay.io
        run: mvn package -am -Pkafkasql -DskipUiBuild -DskipAppTests -pl storage/kafkasql -Dregistry.build.kafkasql-image=${{ github.event_name == 'push' }}

      - name: Create Image and publish it to Docker.io
        run: mvn package -am -Pkafkasql -DskipUiBuild -DskipTests -pl storage/kafkasql -Dregistry.build.kafkasql-image=${{ github.event_name == 'push' }}


  notify-sdk:
    if: github.repository_owner == 'Apicurio' && github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        language: [ go, js, python ]
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721
        id: changes
        with:
          base: main
          filters: |
            openapi:
              - 'app/src/main/resources-unfiltered/META-INF/resources/api-specifications/registry/v2/openapi.json'

      - name: Repository Dispatch
        if: steps.changes.outputs.openapi == 'true'
        uses: peter-evans/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: Apicurio/apicurio-registry-client-sdk-${{ matrix.language }}
          event-type: on-oas-updated
          client-payload: '{"openapi_file_path": "app/src/main/resources-unfiltered/META-INF/resources/api-specifications/registry/v2/openapi.json"}'

  trigger-examples-build:
    if: github.repository_owner == 'Apicurio' && github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    runs-on: ubuntu-20.04
    needs: [ build-verify ]
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: Apicurio/apicurio-registry-examples
          event-type: on-registry-updated

  # Triggers apicurio-registry-mt-ui build whenever apicurio-registry/ui changes
  trigger-mt-ui-build:
    if: github.repository_owner == 'Apicurio' && github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.*.labels.*.name, 'DO NOT MERGE')
    runs-on: ubuntu-20.04
    needs: [ build-verify ]
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721
        id: changes
        with:
          base: main
          list-files: 'csv'
          filters: |
            registry-ui:
              - 'ui/**'

      - name: Repository Dispatch
        if: steps.changes.outputs.registry-ui == 'true'
        uses: peter-evans/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: Apicurio/apicurio-registry-mt-ui
          event-type: on-registry-ui-update
