name: Verify Build Workflow
on:
  push:
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'docs/**'
    branches: [master, 1.2.x, 2.0.x]
  pull_request:
    paths-ignore:
      - '.github/project.yaml'
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'docs/**'
    branches: [master]

jobs:
  build-verify:
    name: Verify Build
    runs-on: ubuntu-18.04
    if: github.repository_owner == 'Apicurio'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '8'
          architecture: x64
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build All Variants
        run: mvn clean install -Pprod -Psql -Pinfinispan -Pstreams -Pasyncmem -pl !tests
      - name: Login to DockerHub Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build The Tagged Docker Images
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          cd distro/docker
          mvn package -Pprod -DskipTests -Ddocker -Ddocker.tag.name=latest-snapshot
          mvn package -Pprod -Psql -DskipTests -Ddocker -Ddocker.tag.name=latest-snapshot
          mvn package -Pprod -Pinfinispan -DskipTests -Ddocker -Ddocker.tag.name=latest-snapshot
          mvn package -Pprod -Pstreams -DskipTests -Ddocker -Ddocker.tag.name=latest-snapshot
          mvn package -Pprod -Pasyncmem -DskipTests -Ddocker -Ddocker.tag.name=latest-snapshot
      - name: Push The Tagged Docker Images
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          docker push apicurio/apicurio-registry-mem:latest-snapshot
          docker push apicurio/apicurio-registry-sql:latest-snapshot
          docker push apicurio/apicurio-registry-infinispan:latest-snapshot
          docker push apicurio/apicurio-registry-streams:latest-snapshot
          docker push apicurio/apicurio-registry-asyncmem:latest-snapshot

  kubernetes-tests:
    name: Kubernetes Tests
    runs-on: ubuntu-18.04
    needs: ["build-verify"]
    if: github.repository_owner == 'Apicurio' && github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '8'
          architecture: x64
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Converters Distro (used in testsuite)
        run: mvn install -pl distro/connect-converter -am -DskipTests -Dmaven.javadoc.skip=true --no-transfer-progress

      - name: Kubernetes Tests
        run: ./.github/scripts/test_apicurio_kubernetes.sh

      - name: Collect logs
        if: failure()
        run: ./.github/scripts/collect_kubernetes_logs.sh

      - name: Upload tests logs artifacts
        if: failure()
        uses: actions/upload-artifact@v1.0.0
        with:
          name: tests-logs
          path: artifacts
