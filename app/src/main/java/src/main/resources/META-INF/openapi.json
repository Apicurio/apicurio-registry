{
    "openapi": "3.0.2",
    "info": {
        "title": "Apicurio Registry API",
        "version": "1.0.0",
        "description": "The Apicurio Registry project's primary REST API - used by clients to add and remove APIs and Schemas to the registry.",
        "contact": {
            "name": "Apicurio",
            "url": "https://github.com/apicurio/apicurio-registry",
            "email": "apicurio@lists.jboss.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "paths": {
        "/artifacts": {
            "summary": "Manage the collection of artifacts in the registry.",
            "post": {
                "requestBody": {
                    "description": "The content of the artifact being created - this is often, but not always, JSON data\nrepresenting one of the supported artifact types:\n\n* Avro\n* Protobuff\n* JSON Schema\n* OpenAPI\n* AsyncAPI",
                    "content": {
                        "application/json": {

                        },
                        "application/x-yaml": {

                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactMetaData"
                                }
                            }
                        },
                        "description": "Artifact was successfully created."
                    }
                },
                "operationId": "createArtifact",
                "summary": "Create Artifact"
            }
        },
        "/artifacts/{artifactId}": {
            "summary": "Manage a single artifact.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            },
                            "application/x-yaml": {

                            }
                        },
                        "description": "The most recent version of the artifact."
                    }
                },
                "operationId": "getLatestArtifact",
                "summary": "Get Latest Artifact",
                "description": "Returns the latest version of the artifact."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        },
                        "application/x-yaml": {

                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactMetaData"
                                }
                            }
                        },
                        "description": "When successful, returns the updated artifact meta-data."
                    }
                },
                "operationId": "updateArtifact",
                "summary": "Update Artifact",
                "description": "Updates an artifact by uploading new content.  The update could fail for a number\nof reasons including:\n\n* No artifact with the `artifactId` exists\n* The new content violates one of the rules configured for the artifact\n\nWhen successful, this creates a new version of the artifact, making it the most recent\n(and therefore official) version of the artifact."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned when the artifact was successfully deleted."
                    }
                },
                "operationId": "deleteArtifact",
                "summary": "Delete Artifact"
            },
            "parameters": [
                {
                    "name": "artifactId",
                    "description": "The artifact ID.  Can be a string (client provided) or integer (server generated) representing the unique artifact identifier.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/artifacts/{artifactId}/versions": {
            "summary": "Manage all the versions of an artifact in the registry.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "examples": {
                                    "All Versions": {
                                        "value": [
                                            5,
                                            6,
                                            10,
                                            103
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "List of all artifact versions (just the version IDs)."
                    }
                },
                "operationId": "listArtifactVersions",
                "summary": "List Artifact Versions"
            },
            "post": {
                "requestBody": {
                    "description": "The content of the artifact version being created - this is often, but not always, JSON data\nrepresenting one of the supported artifact types:\n\n* Avro\n* Protobuff\n* JSON Schema\n* OpenAPI\n* AsyncAPI",
                    "content": {
                        "application/json": {

                        },
                        "application/x-yaml": {

                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionMetaData"
                                }
                            }
                        },
                        "description": "The artifact version was successfully created."
                    }
                },
                "operationId": "createArtifactVersion",
                "summary": "Create Artifact Version",
                "description": "Creates a new version of the artifact by uploading new content.  The configured rules for\nthe artifact will be applied, and if they all pass then the new content will be added\nas the most recent version of the artifact.  If any of the rules fail then an error \nwill be returned."
            },
            "parameters": [
                {
                    "name": "artifactId",
                    "description": "The artifact ID.  Can be a string (client provided) or integer (server generated) representing the unique artifact identifier.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/artifacts/{artifactId}/versions/{version}": {
            "summary": "Manage a single version of a single artifact in the registry.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            },
                            "application/x-yaml": {

                            }
                        },
                        "description": "The content of the artifact version."
                    }
                },
                "operationId": "getArtifactVersion",
                "summary": "Get Artifact Version"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "The artifact version was successfully deleted."
                    }
                },
                "operationId": "deleteArtifactVersion",
                "summary": "Delete Artifact Version"
            },
            "parameters": [
                {
                    "name": "version",
                    "description": "The unique identifier of a specific version of the artifact content.",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "artifactId",
                    "description": "The artifact ID.  Can be a string (client provided) or integer (server generated) representing the unique artifact identifier.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/artifacts/{artifactId}/rules": {
            "summary": "Manage the rules for a single artifact.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rule"
                                    }
                                }
                            }
                        },
                        "description": "Returns the rules configured for the artifact."
                    }
                },
                "operationId": "listArtifactRules",
                "summary": "List Artifact Rules"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The rule was added.  A URI to the new rule can be found in the `Location` response header."
                    }
                },
                "operationId": "createArtifactRule",
                "summary": "Create Artifact Rule"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "The rules were successfully deleted."
                    }
                },
                "operationId": "deleteArtifactRules",
                "summary": "Delete Artifact Rules",
                "description": "Deletes all of the rules configured for the artifact.  After this is done, the global\nrules will once again apply to the artifact."
            },
            "parameters": [
                {
                    "name": "artifactId",
                    "description": "The artifact ID.  Can be a string (client provided) or integer (server generated) representing the unique artifact identifier.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/artifacts/{artifactId}/rules/{rule}": {
            "summary": "Manage the configuration of a single artifact rule.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rule"
                                }
                            }
                        },
                        "description": "Information about a rule."
                    }
                },
                "operationId": "getArtifactRuleConfig",
                "summary": "Get Artifact Rule Config"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rule"
                                }
                            }
                        },
                        "description": "Rule configuration was updated."
                    }
                },
                "operationId": "updateArtifactRuleConfig",
                "summary": "Update Artifact Rule Config"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "The rule was successfully deleted."
                    }
                },
                "operationId": "deleteArtifactRule",
                "summary": "Delete Artifact Rule"
            },
            "parameters": [
                {
                    "name": "rule",
                    "description": "The unique name of a rule.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "artifactId",
                    "description": "The artifact ID.  Can be a string (client provided) or integer (server generated) representing the unique artifact identifier.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/rules": {
            "summary": "Manage the global rules that apply to all artifacts if not otherwise configured.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rule"
                                    }
                                }
                            }
                        },
                        "description": "The list of globally configured rules."
                    }
                },
                "operationId": "listGlobalRules",
                "summary": "List Global Rules"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The global rule was added.  A URI to the new rule can be found in the `Location` response header."
                    }
                },
                "operationId": "createGlobalRule",
                "summary": "Create Global Rule"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "All global rules have been removed successfully."
                    }
                },
                "operationId": "deleteAllGlobalRules",
                "summary": "Delete All Global Rules"
            }
        },
        "/artifacts/{artifactId}/meta": {
            "summary": "Manage the meta-data of a single artifact.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactMetaData"
                                }
                            }
                        },
                        "description": "The artifact's meta-data."
                    }
                },
                "operationId": "getArtifactMetaData",
                "summary": "Get Artifact Meta-Data"
            },
            "put": {
                "requestBody": {
                    "description": "Updated artifact meta-data.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditableMetaData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The artifact's meta-data was updated."
                    }
                },
                "operationId": "updateArtifactMetaData",
                "summary": "Update Artifact Meta-Data"
            },
            "parameters": [
                {
                    "name": "artifactId",
                    "description": "The artifact ID.  Can be a string (client provided) or integer (server generated) representing the unique artifact identifier.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/artifacts/{artifactId}/versions/{version}/meta": {
            "summary": "Manage the meta-data for a single version of an artifact in the registry.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionMetaData"
                                }
                            }
                        },
                        "description": "The artifact version's meta-data."
                    }
                },
                "operationId": "getArtifactVersionMetaData",
                "summary": "Get Artifact Version Meta-Data"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditableMetaData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The artifact version's meta-data was successfully updated."
                    }
                },
                "operationId": "updateArtifactVersionMetaData",
                "summary": "Update Artifact Version Meta-Data"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "The artifact version's user-editable meta-data was successfully deleted."
                    }
                },
                "operationId": "deleteArtifactVersionMetaData",
                "summary": "Delete Artifact Version Meta-Data"
            },
            "parameters": [
                {
                    "name": "version",
                    "description": "The unique identifier of a specific version of the artifact content.",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "artifactId",
                    "description": "The artifact ID.  Can be a string (client provided) or integer (server generated) representing the unique artifact identifier.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/rules/{rule}": {
            "summary": "Manage the configuration of a single global artifact rule.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rule"
                                }
                            }
                        },
                        "description": "The global rule's configuration."
                    }
                },
                "operationId": "getGlobalRuleConfig",
                "summary": "Get Global Rule Config"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rule"
                                }
                            }
                        },
                        "description": "The global rule's configuration was successfully updated."
                    }
                },
                "operationId": "updateGlobalRuleConfig",
                "summary": "Update Global Rule Config"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "The global rule was successfully deleted."
                    }
                },
                "operationId": "deleteGlobalRule",
                "summary": "Delete Global Rule"
            },
            "parameters": [
                {
                    "name": "rule",
                    "description": "The unique name of a rule.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "EditableMetaData": {
                "title": "Root Type for EditableArtifactMetaData",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Artifact Name",
                    "description": "The description of the artifact."
                }
            },
            "VersionMetaData": {
                "title": "Root Type for ArtifactVersionMetaData",
                "description": "",
                "required": [
                    "createdOn",
                    "createdBy",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdOn": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "example": {
                    "version": 12,
                    "name": "Artifact Name",
                    "description": "The description of the artifact",
                    "createdBy": "user1",
                    "createdOn": "2019-05-17T12:00:00Z"
                }
            },
            "ArtifactMetaData": {
                "title": "Root Type for ArtifactMetaData",
                "description": "",
                "required": [
                    "id",
                    "createdBy",
                    "createdOn",
                    "modifiedBy",
                    "modifiedOn",
                    "version",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdOn": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "type": "string"
                    },
                    "modifiedOn": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "version": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "enum": [
                            "avro",
                            "protobuff",
                            "json",
                            "openapi",
                            "asyncapi"
                        ],
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Artifact Name",
                    "description": "Description of the artifact",
                    "createdBy": "user1",
                    "createdOn": "2019-03-22T12:51:19Z",
                    "modifiedBy": "user2",
                    "modifiedOn": "2019-07-19T15:09:00Z"
                }
            },
            "Rule": {
                "title": "Root Type for Rule",
                "description": "",
                "required": [
                    "config"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "config": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "UniqueRuleName",
                    "config": "configuration_of_rule"
                }
            }
        }
    }
}