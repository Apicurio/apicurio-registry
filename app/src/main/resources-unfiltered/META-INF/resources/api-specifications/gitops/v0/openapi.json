{
  "openapi": "3.0.2",
  "info": {
    "title": "Apicurio Registry GitOps API",
    "version": "0.1.0",
    "description": "TODO",
    "contact": {
      "name": "Apicurio",
      "url": "https://github.com/apicurio/apicurio-registry",
      "email": "apicurio@lists.jboss.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "paths": {
    "/validation": {
      "get": {
        "parameters": [
          {
            "name": "X-Registry-GitOps-Secret",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationTask"
                  }
                }
              }
            },
            "description": "TODO"
          }
        },
        "operationId": "listValidationTasks"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationTaskCreate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "X-Registry-GitOps-Secret",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationTask"
                }
              }
            },
            "description": "TODO"
          }
        },
        "operationId": "createValidationTask"
      }
    },
    "/validation/{taskId}": {
      "get": {
        "parameters": [
          {
            "name": "X-Registry-GitOps-Secret",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "header",
            "required": true
          },
          {
            "name": "taskId",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationTask"
                }
              }
            },
            "description": "TODO"
          }
        },
        "operationId": "getValidationTask"
      },
      "delete": {
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "TODO"
          }
        },
        "operationId": "deleteValidationTask"
      }
    },
    "/validation/{taskId}/result": {
      "get": {
        "parameters": [
          {
            "name": "X-Registry-GitOps-Secret",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "header",
            "required": true
          },
          {
            "name": "taskId",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationTaskResult"
                }
              }
            },
            "description": "TODO"
          }
        },
        "operationId": "getValidationTaskResult"
      },
      "parameters": [
        {
          "name": "taskId",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "title": "Root Type for Error",
        "description": "All error responses, whether `4xx` or `5xx` will include one of these as the response\nbody.",
        "type": "object",
        "properties": {
          "message": {
            "description": "The short error message.",
            "type": "string"
          },
          "detail": {
            "description": "Full details about the error.  This might contain a server stack trace, for example.",
            "type": "string"
          }
        },
        "example": {
          "message": "An error occurred somewhere."
        }
      },
      "ValidationTaskState": {
        "description": "",
        "enum": [
          "IN_PROGRESS",
          "SUCCESS",
          "FAILED"
        ],
        "type": "string"
      },
      "ValidationTaskResult": {
        "title": "TODO",
        "description": "",
        "required": [
          "failures"
        ],
        "type": "object",
        "properties": {
          "failures": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationFailure"
            }
          }
        }
      },
      "ValidationFailure": {
        "title": "TODO",
        "description": "",
        "required": [
          "message",
          "filePath"
        ],
        "type": "object",
        "properties": {
          "filePath": {
            "type": "string"
          },
          "message": {
            "description": "",
            "type": "string"
          }
        },
        "example": {
          "remoteURL": "https://github.com.local/example/apicurio-registry-data.git",
          "ref": "feat/foo"
        }
      },
      "ValidationTask": {
        "title": "TODO",
        "description": "",
        "required": [
          "remoteURL",
          "ref",
          "taskId",
          "state"
        ],
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "remoteURL": {
            "description": "",
            "type": "string"
          },
          "taskId": {
            "description": "",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/ValidationTaskState",
            "description": ""
          }
        }
      },
      "ValidationTaskCreate": {
        "title": "TODO",
        "description": "",
        "required": [
          "remoteURL",
          "ref"
        ],
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "remoteURL": {
            "description": "",
            "type": "string"
          }
        },
        "example": {
          "remoteURL": "https://github.com.local/example/apicurio-registry-data.git",
          "ref": "feat/foo"
        }
      }
    },
    "responses": {
      "NotFound": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Common response for all operations that can return a `404` error."
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Common response for all operations that can fail with an unexpected server error."
      },
      "BadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Common response for all operations that can return a `400` error."
      },
      "Conflict": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Common response used when an input conflicts with existing data."
      }
    }
  }
}
