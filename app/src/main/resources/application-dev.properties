# === Dev profile - see README
%dev.quarkus.http.port=${HTTP_PORT:8080}
%dev.quarkus.log.level=${LOG_LEVEL:INFO}
%dev.quarkus.log.category."io.apicurio".level=${REGISTRY_LOG_LEVEL:DEBUG}
%dev.quarkus.log.console.enable=true
%dev.quarkus.package.type=legacy-jar

# Liveness and Readiness
%dev.registry.liveness.errors.ignored=${LIVENESS_ERRORS_IGNORED:}

# Eventing
# example
# %dev.registry.events.sink.eventdisplay=http://localhost:8888/
# compatibility with knative sink binding

%dev.registry.events.ksink=${K_SINK:}
%dev.registry.events.kafka.config.bootstrap.servers=${bootstrap.servers:localhost:9092}
%dev.registry.events.kafka.config.enable.idempotence=true
%dev.registry.events.kafka.config.retries=3
%dev.registry.events.kafka.config.acks=all

# Multitenancy
%dev.registry.enable.multitenancy=false

# Storage
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.url=${REGISTRY_DATASOURCE_URL:jdbc:h2:mem:registry_db}
%dev.quarkus.datasource.username=${REGISTRY_DATASOURCE_USERNAME:sa}
%dev.quarkus.datasource.password=${REGISTRY_DATASOURCE_PASSWORD:sa}
%dev.quarkus.datasource.jdbc.initial-size=20
%dev.quarkus.datasource.jdbc.min-size=20
%dev.quarkus.datasource.jdbc.max-size=100
%dev.registry.sql.init=true

# UI Config
%dev.registry.ui.config.uiContextPath=${REGISTRY_UI_CONFIG_UI_CONTEXT_PATH:/ui/}
%dev.registry.ui.config.apiUrl=${REGISTRY_UI_CONFIG_APIURL:_}

# Metrics
%dev.quarkus.micrometer.enabled=true
%dev.quarkus.micrometer.binder.http-server.enabled=false
%dev.quarkus.micrometer.binder.http-client.enabled=false
%dev.quarkus.micrometer.export.prometheus.enabled=true
%dev.quarkus.datasource.metrics.enabled=true
%dev.quarkus.datasource.jdbc.enable-metrics=true

# Dynamic logging configuration
%dev.registry.logconfigjob.every=5s
%dev.registry.logconfigjob.delayed=1s

# Reaper
%dev.registry.multitenancy.reaper.every=3s