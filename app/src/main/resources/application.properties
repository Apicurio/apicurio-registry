# Additional index dependencies

quarkus.index-dependency.jaxrs.group-id=org.jboss.spec.javax.ws.rs
quarkus.index-dependency.jaxrs.artifact-id=jboss-jaxrs-api_2.1_spec

# === Dev profile - see README
%dev.quarkus.http.port=${HTTP_PORT:8080}
%dev.quarkus.log.level=DEBUG
%dev.quarkus.log.console.enable=true
%dev.quarkus.datasource.url=jdbc:h2:tcp://localhost:9123/mem:registry;DB_CLOSE_DELAY=-1;IFEXISTS=FALSE;
%dev.quarkus.datasource.driver=org.h2.Driver
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.jdbc-warnings=true
%dev.quarkus.hibernate-orm.statistics=true
# Kafka -- when used
%dev.registry.kafka.common.bootstrap.servers=${bootstrap.servers:localhost:9092}
# Kafka - Registry producer
%dev.registry.kafka.storage-producer.enable.idempotence=true
#%dev.registry.kafka.storage-producer.max.in.flight.requests.per.connection=5
%dev.registry.kafka.storage-producer.retries=3
%dev.registry.kafka.storage-producer.acks=all
# Kafka - Snapshot handling
%dev.registry.kafka.snapshot-producer.enable.idempotence=true
%dev.registry.kafka.snapshot-producer.retries=3
%dev.registry.kafka.snapshot-producer.acks=all
%dev.registry.kafka.snapshot.requests=1000

# Streams -- when used
%dev.registry.streams.common.bootstrap.servers=${bootstrap.servers:localhost:9092}
%dev.registry.streams.topology.application.id=apicurio-registry
%dev.registry.streams.topology.application.server=localhost:9000
%dev.registry.streams.topology.num.stream.threads=2
%dev.registry.streams.topology.num.standby.replicas=1
%dev.registry.streams.topology.processing.guarantee=exactly_once
%dev.registry.streams.topology.replication.factor=1
%dev.registry.streams.storage-producer.enable.idempotence=true
#%dev.registry.streams.storage-producer.max.in.flight.requests.per.connection=5
%dev.registry.streams.storage-producer.retries=3
%dev.registry.streams.storage-producer.acks=all

# Asyncmem -- when used
%dev.registry.asyncmem.delays.create=${ASYNC_DELAYS_CREATE:1000}
%dev.registry.asyncmem.delays.update=${ASYNC_DELAYS_UPDATE:1000}

# Infinispan
%dev.registry.infinispan.cluster.name=${INFINISPAN_CLUSTER_NAME:apicurio-registry}

# === Prod profile - see README
# HTTP Port
%prod.quarkus.http.port=${HTTP_PORT:8080}

# Log
%prod.quarkus.log.level=${LOG_LEVEL:INFO}
%prod.quarkus.log.console.enable=true

# JPA
%prod.quarkus.datasource.driver=org.postgresql.Driver
%prod.quarkus.datasource.url=${QUARKUS_DATASOURCE_URL}
%prod.quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME:}
# ^ the colon allows for the option to be empty by default
%prod.quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD:}
%prod.quarkus.hibernate-orm.database.generation=update
# Kafka
%prod.registry.kafka.common.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
# Kafka - Registry producer
%prod.registry.kafka.storage-producer.enable.idempotence=true
#%prod.registry.kafka.storage-producer.max.in.flight.requests.per.connection=5
%prod.registry.kafka.storage-producer.retries=3
%prod.registry.kafka.storage-producer.acks=all

# Kafka - Snapshot handling
%prod.registry.kafka.snapshot-producer.enable.idempotence=true
%prod.registry.kafka.snapshot-producer.retries=3
%prod.registry.kafka.snapshot-producer.acks=all
%prod.registry.kafka.snapshot.requests=1000

# Streams -- when used
%prod.registry.streams.common.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
%prod.registry.streams.topology.application.id=${APPLICATION_ID}
%prod.registry.streams.topology.application.server=${APPLICATION_SERVER_HOST:localhost}:${APPLICATION_SERVER_PORT:9000}
%prod.registry.streams.topology.num.stream.threads=2
%prod.registry.streams.topology.num.standby.replicas=1
%prod.registry.streams.topology.processing.guarantee=exactly_once
%prod.registry.streams.topology.replication.factor=1
%prod.registry.streams.storage-producer.enable.idempotence=true
#%prod.registry.streams.storage-producer.max.in.flight.requests.per.connection=5
%prod.registry.streams.storage-producer.retries=3
%prod.registry.streams.storage-producer.acks=all

# Asyncmem -- when used
%prod.registry.asyncmem.delays.create=${ASYNC_DELAYS_CREATE:1000}
%prod.registry.asyncmem.delays.update=${ASYNC_DELAYS_UPDATE:1000}

# Infinispan
%prod.registry.infinispan.cluster.name=${INFINISPAN_CLUSTER_NAME:apicurio-registry}

# Search
# This currently disables search --> noop, remove once search is enabled
%dev.registry.search-index.search.client-class=io.apicurio.registry.search.client.noop.NoopSearchClient
%prod.registry.search-index.search.client-class=io.apicurio.registry.search.client.noop.NoopSearchClient

# UI Features
%dev.registry.ui.features.readOnly=${REGISTRY_UI_FEATURES_READONLY:false}
%prod.registry.ui.features.readOnly=${REGISTRY_UI_FEATURES_READONLY:false}

# Enable CORS always
quarkus.http.cors=true

# Disable OpenAPI class scanning
mp.openapi.scan.disable=true
mp.openapi.servers=/api
