# Additional index dependencies
%prod.quarkus.datasource.db-kind=other
%prod.quarkus.datasource.jdbc.driver=com.google.cloud.spanner.jdbc.JdbcDriver
quarkus.index-dependency.jaxrs.group-id=org.jboss.spec.javax.ws.rs
quarkus.index-dependency.jaxrs.artifact-id=jboss-jaxrs-api_2.1_spec

# === Dev profile - see README
%dev.quarkus.http.port=${HTTP_PORT:8080}
%dev.quarkus.log.level=${LOG_LEVEL:INFO}
%dev.quarkus.log.category."io.apicurio".level=${REGISTRY_LOG_LEVEL:DEBUG}
%dev.quarkus.log.console.enable=true

# === Prod profile - see README
# HTTP Port
%prod.quarkus.http.port=${HTTP_PORT:8080}

# Log
%prod.quarkus.log.level=${LOG_LEVEL:INFO}
%prod.quarkus.log.console.enable=true
%prod.quarkus.log.category."io.apicurio".level=${REGISTRY_LOG_LEVEL:INFO}

# Search
# This currently disables search --> noop, remove once search is enabled
%dev.registry.search-index.search.client-class=io.apicurio.registry.search.client.noop.NoopSearchClient
%prod.registry.search-index.search.client-class=io.apicurio.registry.search.client.noop.NoopSearchClient

# UI Config
%dev.registry.ui.config.uiUrl=${REGISTRY_UI_CONFIG_UIURL:_}
%prod.registry.ui.config.uiUrl=${REGISTRY_UI_CONFIG_UIURL:_}
%dev.registry.ui.config.apiUrl=${REGISTRY_UI_CONFIG_APIURL:_}
%prod.registry.ui.config.apiUrl=${REGISTRY_UI_CONFIG_APIURL:_}

# UI Features
%dev.registry.ui.features.readOnly=${REGISTRY_UI_FEATURES_READONLY:false}
%prod.registry.ui.features.readOnly=${REGISTRY_UI_FEATURES_READONLY:false}

# Enable CORS always
quarkus.http.cors=true

# Disable OpenAPI class scanning
mp.openapi.scan.disable=true
mp.openapi.servers=/api

# The ignored error list
%dev.registry.liveness.errors.ignored=${LIVENESS_ERRORS_IGNORED:io.grpc.StatusRuntimeException,org.apache.kafka.streams.errors.InvalidStateStoreException}
%prod.registry.liveness.errors.ignored=${LIVENESS_ERRORS_IGNORED:io.grpc.StatusRuntimeException,org.apache.kafka.streams.errors.InvalidStateStoreException}

# Readiness and Liveness

%prod.registry.metrics.PersistenceExceptionLivenessCheck.errorThreshold=${LIVENESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.PersistenceExceptionLivenessCheck.counterResetWindowDurationSec=${LIVENESS_COUNTER_RESET:30}
%prod.registry.metrics.PersistenceExceptionLivenessCheck.statusResetWindowDurationSec=${LIVENESS_STATUS_RESET:60}
%prod.registry.metrics.ResponseErrorLivenessCheck.errorThreshold=${LIVENESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.ResponseErrorLivenessCheck.counterResetWindowDurationSec=${LIVENESS_COUNTER_RESET:30}
%prod.registry.metrics.ResponseErrorLivenessCheck.statusResetWindowDurationSec=${LIVENESS_STATUS_RESET:60}

%prod.registry.metrics.PersistenceTimeoutReadinessCheck.errorThreshold=${READINESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.PersistenceTimeoutReadinessCheck.counterResetWindowDurationSec=${READINESS_COUNTER_RESET:30}
%prod.registry.metrics.PersistenceTimeoutReadinessCheck.statusResetWindowDurationSec=${READINESS_STATUS_RESET:60}
%prod.registry.metrics.PersistenceTimeoutReadinessCheck.timeoutSec=${READINESS_TIMEOUT:10}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.errorThreshold=${READINESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.counterResetWindowDurationSec=${READINESS_COUNTER_RESET:30}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.statusResetWindowDurationSec=${READINESS_STATUS_RESET:60}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.timeoutSec=${READINESS_TIMEOUT:20}

# Events
# example
# %dev.registry.events.sink.eventdisplay=http://localhost:8888/
# compatibility with knative sink binding
%dev.registry.events.ksink=${K_SINK:}
%prod.registry.events.ksink=${K_SINK:}

%dev.registry.events.kafka.config.bootstrap.servers=${bootstrap.servers:localhost:9092}
%dev.registry.events.kafka.config.enable.idempotence=true
%dev.registry.events.kafka.config.retries=3
%dev.registry.events.kafka.config.acks=all

%prod.registry.events.kafka.config.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:}
%prod.registry.events.kafka.config.enable.idempotence=true
%prod.registry.events.kafka.config.retries=3
%prod.registry.events.kafka.config.acks=all

#Auth - disabled by default

registry.auth.enabled=${AUTH_ENABLED:false}

quarkus.oidc.enabled=true
quarkus.oidc.tenant-enabled=${registry.auth.enabled}

registry.keycloak.url=${KEYCLOAK_URL:https://studio-auth.apicur.io/auth}
registry.keycloak.realm=${KEYCLOAK_REALM:apicurio-local}

quarkus.oidc.auth-server-url=${registry.keycloak.url}/realms/${registry.keycloak.realm}
quarkus.oidc.client-id=${KEYCLOAK_API_CLIENT_ID:registry-api}

registry.ui.config.auth.keycloak.url=${registry.keycloak.url}
registry.ui.config.auth.keycloak.realm=${registry.keycloak.realm}
registry.ui.config.auth.keycloak.clientId=${KEYCLOAK_UI_CLIENT_ID:apicurio-registry}
registry.ui.config.auth.keycloak.onLoad=login-required

quarkus.http.auth.policy.sr-write-artifacts-policy.roles-allowed=sr-admin,sr-developer
quarkus.http.auth.permission.sr-write-artifacts.enabled=${registry.auth.enabled}
quarkus.http.auth.permission.sr-write-artifacts.paths=/api/artifacts/*,/public/*,/css/*,/js/*,/robots.txt
quarkus.http.auth.permission.sr-write-artifacts.policy=sr-write-artifacts-policy
quarkus.http.auth.permission.sr-write-artifacts.methods=PUT,POST,DELETE,PATCH

quarkus.http.auth.policy.sr-read-artifacts-policy.roles-allowed=sr-admin,sr-developer,sr-readonly
quarkus.http.auth.permission.sr-read-artifacts.enabled=${registry.auth.enabled}
quarkus.http.auth.permission.sr-read-artifacts.paths=/api/artifacts/*,/public/*,/css/*,/js/*,/robots.txt
quarkus.http.auth.permission.sr-read-artifacts.policy=sr-read-artifacts-policy
quarkus.http.auth.permission.sr-read-artifacts.methods=GET,HEAD

quarkus.http.auth.policy.sr-write-rules-policy.roles-allowed=sr-admin
quarkus.http.auth.permission.sr-rules.enabled=${registry.auth.enabled}
quarkus.http.auth.permission.sr-rules.paths=/api/rules/*,/public/*,/css/*,/js/*,/robots.txt
quarkus.http.auth.permission.sr-rules.policy=sr-write-rules-policy
quarkus.http.auth.permission.sr-rules.methods=GET,HEAD,PUT,POST,DELETE,PATCH

quarkus.http.auth.permission.permit1.enabled=${registry.auth.enabled}
quarkus.http.auth.permission.permit1.paths=/health,/openapi,/metrics/*
quarkus.http.auth.permission.permit1.policy=permit
quarkus.http.auth.permission.permit1.methods=GET

quarkus.http.auth.permission.authenticated.enabled=${registry.auth.enabled}
quarkus.http.auth.permission.authenticated.paths=/api/*
quarkus.http.auth.permission.authenticated.policy=authenticated

# Test config

%test.quarkus.log.level=${LOG_LEVEL:WARN}
%test.quarkus.log.category."io.apicurio".level=${REGISTRY_LOG_LEVEL:WARN}
%test.quarkus.log.console.enable=true

# Search
# This currently disables search --> noop, remove once search is enabled
%test.registry.search-index.search.client-class=io.apicurio.registry.search.client.noop.NoopSearchClient

# The ignored error list
%test.registry.liveness.errors.ignored=${LIVENESS_ERRORS_IGNORED:io.grpc.StatusRuntimeException,org.apache.kafka.streams.errors.InvalidStateStoreException}

# UI Config
%test.registry.ui.config.uiUrl=${REGISTRY_UI_CONFIG_UIURL:_}
%test.registry.ui.config.apiUrl=${REGISTRY_UI_CONFIG_APIURL:_}

# UI Features
%test.registry.ui.features.readOnly=${REGISTRY_UI_FEATURES_READONLY:false}

%test.registry.events.kafka.config.bootstrap.servers=${bootstrap.servers:localhost:9092}
%test.registry.events.kafka.config.enable.idempotence=true
%test.registry.events.kafka.config.retries=3
%test.registry.events.kafka.config.acks=all