# Additional index dependencies

quarkus.index-dependency.jaxrs.group-id=org.jboss.spec.javax.ws.rs
quarkus.index-dependency.jaxrs.artifact-id=jboss-jaxrs-api_2.1_spec

# === Dev profile - see README
%dev.quarkus.http.port=${HTTP_PORT:8080}
%dev.quarkus.log.level=${LOG_LEVEL:INFO}
%dev.quarkus.log.category."io.apicurio".level=${REGISTRY_LOG_LEVEL:DEBUG}
%dev.quarkus.log.console.enable=true

# === Prod profile - see README
# HTTP Port
%prod.quarkus.http.port=${HTTP_PORT:8080}

# Log
%prod.quarkus.log.level=${LOG_LEVEL:INFO}
%prod.quarkus.log.console.enable=true
%prod.quarkus.log.category."io.apicurio".level=${REGISTRY_LOG_LEVEL:INFO}

# Search
# This currently disables search --> noop, remove once search is enabled
%dev.registry.search-index.search.client-class=io.apicurio.registry.search.client.noop.NoopSearchClient
%prod.registry.search-index.search.client-class=io.apicurio.registry.search.client.noop.NoopSearchClient

# UI Config
%dev.registry.ui.config.uiUrl=${REGISTRY_UI_CONFIG_UIURL:_}
%prod.registry.ui.config.uiUrl=${REGISTRY_UI_CONFIG_UIURL:_}
%dev.registry.ui.config.apiUrl=${REGISTRY_UI_CONFIG_APIURL:_}
%prod.registry.ui.config.apiUrl=${REGISTRY_UI_CONFIG_APIURL:_}

# UI Features
%dev.registry.ui.features.readOnly=${REGISTRY_UI_FEATURES_READONLY:false}
%prod.registry.ui.features.readOnly=${REGISTRY_UI_FEATURES_READONLY:false}

# Enable CORS always
quarkus.http.cors=true

# Disable OpenAPI class scanning
mp.openapi.scan.disable=true
mp.openapi.servers=/api

# The ignored error list
%dev.registry.liveness.errors.ignored=${LIVENESS_ERRORS_IGNORED:io.grpc.StatusRuntimeException,org.apache.kafka.streams.errors.InvalidStateStoreException}
%prod.registry.liveness.errors.ignored=${LIVENESS_ERRORS_IGNORED:io.grpc.StatusRuntimeException,org.apache.kafka.streams.errors.InvalidStateStoreException}

# Readiness and Liveness

%prod.registry.metrics.PersistenceExceptionLivenessCheck.errorThreshold=${LIVENESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.PersistenceExceptionLivenessCheck.counterResetWindowDurationSec=${LIVENESS_COUNTER_RESET:30}
%prod.registry.metrics.PersistenceExceptionLivenessCheck.statusResetWindowDurationSec=${LIVENESS_STATUS_RESET:60}
%prod.registry.metrics.ResponseErrorLivenessCheck.errorThreshold=${LIVENESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.ResponseErrorLivenessCheck.counterResetWindowDurationSec=${LIVENESS_COUNTER_RESET:30}
%prod.registry.metrics.ResponseErrorLivenessCheck.statusResetWindowDurationSec=${LIVENESS_STATUS_RESET:60}

%prod.registry.metrics.PersistenceTimeoutReadinessCheck.errorThreshold=${READINESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.PersistenceTimeoutReadinessCheck.counterResetWindowDurationSec=${READINESS_COUNTER_RESET:30}
%prod.registry.metrics.PersistenceTimeoutReadinessCheck.statusResetWindowDurationSec=${READINESS_STATUS_RESET:60}
%prod.registry.metrics.PersistenceTimeoutReadinessCheck.timeoutSec=${READINESS_TIMEOUT:10}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.errorThreshold=${READINESS_ERROR_THRESHOLD:5}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.counterResetWindowDurationSec=${READINESS_COUNTER_RESET:30}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.statusResetWindowDurationSec=${READINESS_STATUS_RESET:60}
%prod.registry.metrics.ResponseTimeoutReadinessCheck.timeoutSec=${READINESS_TIMEOUT:20}

# Events
# example
# %dev.registry.events.sink.eventdisplay=http://localhost:8888/
# compatibility with knative sink binding
%dev.registry.events.ksink=${K_SINK:}
%prod.registry.events.ksink=${K_SINK:}

%dev.registry.events.kafka.config.bootstrap.servers=${bootstrap.servers:localhost:9092}
%dev.registry.events.kafka.config.enable.idempotence=true
%dev.registry.events.kafka.config.retries=3
%dev.registry.events.kafka.config.acks=all

%prod.registry.events.kafka.config.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:}
%prod.registry.events.kafka.config.enable.idempotence=true
%prod.registry.events.kafka.config.retries=3
%prod.registry.events.kafka.config.acks=all
