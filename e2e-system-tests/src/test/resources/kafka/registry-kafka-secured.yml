apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "apicurio-registry-e2e"
  labels:
    app: apicurio-registry-kafka
  name: apicurio-registry-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apicurio-registry-kafka
  template:
    metadata:
      labels:
        app: apicurio-registry-kafka
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka-service:9092
            - name: AUTH_ENABLED
              value: "true"
            - name: KEYCLOAK_API_CLIENT_ID
              value: "registry-api"
            - name: KEYCLOAK_UI_CLIENT_ID
              value: apicurio-registry
            - name: REGISTRY_UI_CONFIG_AUTH_KEYCLOAK_URL
              value: 'http://localhost:8090'
            - name: KEYCLOAK_REALM
              value: 'registry'
            - name: QUARKUS_OIDC_AUTH_SERVER_URL
              value: "http://keycloak-service:8090/realms/registry"
            - name: QUARKUS_OIDC_TLS_VERIFICATION
              value: none
            - name: TOKEN_ENDPOINT
              value: "http://keycloak-service:8090/realms/registry/protocol/openid-connect/token"
            - name: CLIENT_CREDENTIALS_BASIC_AUTH_ENABLED
              value: "true"
          image: quay.io/apicurio/apicurio-registry-kafkasql:latest-snapshot
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: apicurio-registry-kafka
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  namespace: "apicurio-registry-e2e"
  labels:
    app: apicurio-registry-kafka
  name: apicurio-registry-service
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: apicurio-registry-kafka
  type: ClusterIP