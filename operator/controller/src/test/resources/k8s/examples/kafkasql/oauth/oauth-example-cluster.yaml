apiVersion: v1
kind: Secret
metadata:
  name: client-credentials
data:
  clientSecret: dGVzdDE=
  clientId: YWRtaW4tY2xpZW50
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: dual-role
  labels:
    strimzi.io/cluster: oauth-example-cluster
spec:
  replicas: 1
  roles:
    - controller
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 5Gi
        deleteClaim: false
        kraftMetadata: shared
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: oauth-example-cluster
  annotations:
    strimzi.io/kraft: enabled
    strimzi.io/node-pools: enabled
spec:
  kafka:
    version: 3.9.0
    metadataVersion: 3.9-IV0
    replicas: 1
    listeners:
      - name: tls
        type: internal
        port: 9093
        tls: false
        authentication:
          type: oauth
          clientIdRef:
            name: client-credentials
            key: clientId
          clientSecretRef:
            name: client-credentials
            key: clientSecret
          validIssuerUri: http://keycloak:8080/realms/registry
          jwksEndpointUri: http://keycloak:8080/realms/registry/protocol/openid-connect/certs
          userNameClaim: preferred_username
    config:
      inter.broker.protocol.version: "3.8"
      offsets.topic.replication.factor: 1
      sasl.enabled.mechanisms: OAUTHBEARER
      listener.name.tls.sasl.enabled.mechanisms: OAUTHBEARER
    storage:
      type: ephemeral