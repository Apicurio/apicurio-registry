cases:

  - id: 'Empty 1'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
    spec: { }
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag

  - id: 'Metadata empty'
    original:
      metadata:
        labels:
          app: test
          app.kubernetes.io/name: test
        annotations:
          foo: bar
      spec:
        containers:
          - name: test
            image: test:tag
    spec: { }
    expected:
      metadata:
        labels:
          app: test
          app.kubernetes.io/name: test
        annotations:
          foo: bar
      spec:
        containers:
          - name: test
            image: test:tag

  - id: 'Metadata 1'
    original:
      metadata:
        labels:
          app: test
          app.kubernetes.io/name: test
      spec:
        containers:
          - name: test
            image: test:tag
    spec:
      metadata:
        labels:
          app: override
          foo: bar
        annotations:
          bar: baz
    expected:
      metadata:
        labels:
          app: test
          app.kubernetes.io/name: test
          foo: bar
        annotations:
          bar: baz
      spec:
        containers:
          - name: test
            image: test:tag

  - id: 'Image empty'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
    spec: { }
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag

  - id: 'Image 2'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
    spec:
      spec:
        containers:
          - name: other
            image: other:tag
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
          - name: other
            image: other:tag

  - id: 'Env empty'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            env:
              - name: foo
                value: bar
    spec: { }
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            env:
              - name: foo
                value: bar

  - id: 'Env 2'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
    spec:
      spec:
        containers:
          - name: other
            image: other:tag
            env:
              - name: foo
                value: bar
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
          - name: other
            image: other:tag
            env:
              - name: foo
                value: bar

  - id: 'Ports empty'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
    spec: { }
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP

  - id: 'Ports 1'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
    spec:
      spec:
        containers:
          - name: test
            ports:
              - containerPort: 8081
                name: http
                protocol: TCP
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8081
                name: http
                protocol: TCP

  - id: 'Ports 2'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
    spec:
      spec:
        containers:
          - name: test
            ports:
              - containerPort: 8443
                name: https
                protocol: TCP
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 8443
                name: https
                protocol: TCP

  - id: 'Ports 3'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
    spec:
      spec:
        containers:
          - name: other
            image: other:tag
            ports:
              - containerPort: 8080
                name: http-other
                protocol: TCP
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
          - name: other
            image: other:tag
            ports:
              - containerPort: 8080
                name: http-other
                protocol: TCP

  - id: 'Readiness probe empty'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            readinessProbe:
              httpGet:
                path: /health/ready
                port: 8080
                scheme: HTTP
    spec: { }
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            readinessProbe:
              httpGet:
                path: /health/ready
                port: 8080
                scheme: HTTP

  - id: 'Readiness probe 1'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            readinessProbe:
              httpGet:
                path: /health/ready
                port: 8080
                scheme: HTTP
    spec:
      spec:
        containers:
          - name: test
            readinessProbe:
              exec:
                command:
                  - cat
                  - /tmp/healthy
                initialDelaySeconds: 5
                periodSeconds: 5
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            readinessProbe:
              exec:
                command:
                  - cat
                  - /tmp/healthy
                initialDelaySeconds: 5
                periodSeconds: 5

  - id: 'Liveness probe empty'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            livenessProbe:
              httpGet:
                path: /health/live
                port: 8080
                scheme: HTTP
    spec: { }
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            livenessProbe:
              httpGet:
                path: /health/live
                port: 8080
                scheme: HTTP

  - id: 'Readiness probe 1'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            livenessProbe:
              httpGet:
                path: /health/live
                port: 8080
                scheme: HTTP
    spec:
      spec:
        containers:
          - name: test
            livenessProbe:
              exec:
                command:
                  - cat
                  - /tmp/live
                initialDelaySeconds: 5
                periodSeconds: 5
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            livenessProbe:
              exec:
                command:
                  - cat
                  - /tmp/live
                initialDelaySeconds: 5
                periodSeconds: 5

  - id: 'Resources empty'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: '1'
                memory: 1Gi
    spec: { }
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: '1'
                memory: 1Gi

  - id: 'Resources 1'
    original:
      spec:
        containers:
          - name: test
            image: test:tag
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: '1'
                memory: 1Gi
    spec:
      spec:
        containers:
          - name: test
            resources:
              requests:
                cpu: 750m
              limits:
                memory: 2Gi
    expected:
      metadata: { }
      spec:
        containers:
          - name: test
            image: test:tag
            resources:
              requests:
                cpu: 750m
                memory: 512Mi
              limits:
                cpu: '1'
                memory: 2Gi
