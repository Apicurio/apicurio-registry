events { }

http {
    server {
        listen 8080;

        location = / {
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
            return 301 $scheme://$http_host/ui/;
        }

        location = /ui {
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
            return 301 $scheme://$http_host/ui/;
        }

        location /ui/ {
            proxy_pass http://apicurio-registry-ui:8080/; # Proxy to the Apicurio Registry UI service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /apis/ {
            proxy_pass http://apicurio-registry:8080/apis/; # Proxy to the Apicurio Registry API service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api-specifications/ {
            proxy_pass http://apicurio-registry:8080/api-specifications/; # Proxy to the Apicurio Registry API service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /resources/ {
            proxy_pass http://apicurio-registry:8080/resources/; # Proxy to the Apicurio Registry API service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
